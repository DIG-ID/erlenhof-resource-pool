---
import { getUpcomingJobsForUser } from "@/hooks/get-data";
import { formatDate } from "@/lib/utils";

import ProtectedComponent from "@/components/protected-component";
import { ComponentWrapper } from "@/components/ui/component-wrapper";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Eye, CalendarDays, CheckCircle } from "lucide-react";

const { userData } = Astro.locals;

// üîê Redirecionar se n√£o estiver autenticado
if (!userData) {
  return Astro.redirect("/auth/login");
}

// üîç Buscar jobs atribu√≠dos a este utilizador, ordenados por data desc
const assignedJobs = await getUpcomingJobsForUser(userData.id);
---

<ProtectedComponent allowedRoles={["user"]} userRole={userData.role.id}>
  <ComponentWrapper name="Next Assigned Jobs">
    <section class="job-list w-full">
      
      {assignedJobs.length === 0 ? (
        <p>No assigned jobs found.</p>
      ) : (
        <div class="grid grid-cols-4 gap-6">
          {assignedJobs.map(job => (
            <Card key={job.id} className="shadow-none">
              <CardHeader>
                <CardTitle>{job.title}</CardTitle>
                <CardDescription className="flex items-center gap-1">
                  <CalendarDays size={16} /> Date: {formatDate(job.date)}
                </CardDescription>
              </CardHeader>
              <CardContent>
                {job.description}
              </CardContent>
              <CardFooter className="flex justify-between">
                <div class="flex justify-end items-center gap-2 w-full">
                  <Button variant="outline" className="cursor-pointer">
                    <Eye className="mr-1" size={16} /> <a href={`/jobs/${job.id}`}>View Job</a>
                  </Button>
                  <Button disabled className="bg-gray-400 text-white cursor-not-allowed">
                    <CheckCircle className="mr-1" size={16} /> Taken
                  </Button>
                </div>
              </CardFooter>
            </Card>
          ))}
        </div>
      )}
    </section>
  </ComponentWrapper>
</ProtectedComponent>
