---
import { getUserData } from "@/hooks/get-data";
import Layout from "@/layouts/Layout.astro"
import DashboardWrapper from "@/components/DashboardWrapper.astro";
import { Button } from "@/components/ui/button";
import { AlertDialogDelete } from "@/components/alert-dialog-delete";
import { Separator } from "@/components/ui/separator";
import { Pencil, Award, GalleryVerticalEnd, Fingerprint } from "lucide-react";
import { Badge } from "@/components/ui/badge";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/404");
}

// Fetch the user data using the helper function
const user = await getUserData(id);

if (!user) {
  return Astro.redirect("/404");
}
---

<Layout title=`${user.name} ${user.surname}`>
  <DashboardWrapper>
    <div class="flex justify-end">
      <div class="flex items-center gap-2 text-xs text-muted-foreground">
        <p class="leading-7"><span class="font-medium">E-Mail verifiziert:</span>
          {user.emailVerified ? (
            <span>Ja</span>
          ) : (
            <span>No</span>
          )}
        </p>
        <p class="leading-7"><span class="font-medium">Letzter Login:</span> {user.lastSignInTime}</p>
        <p class="leading-7"><span class="font-medium">Erstellt am:</span> {user.creationTime}</p>
      </div>
    </div>
    <div class="flex w-full scroll-mt-16 flex-col rounded-lg border">
      <div class="border-b px-4 py-3 flex flex-col lg:flex-row lg:justify-between lg:items-center gap-y-6 lg:gap-y-0">
          <div class="flex flex-col lg:flex-row justify-items-start items-start lg:items-center gap-x-4 gap-y-2 lg:gap-y-0"><h1 class="text-sm font-medium inline-block break-all">{user.name} {user.surname}</h1><span class="relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-xs font-medium flex items-center gap-x-2"><Fingerprint size={16}/> {id}</span></div>
          <div class="flex flex-col lg:flex-row lg:items-center gap-y-2 lg:gap-y-0 gap-x-3 text-xs">
            <span class="flex items-center gap-x-1"><GalleryVerticalEnd size={16}/> <span class="font-medium">Aktuelle Gruppe:</span> {user.pool.name} </span>
            <span class="flex items-center gap-x-1"><Award size={16}/> <span class="font-medium">Status:</span> {user.isActive ? (
              <Badge>Aktiv</Badge>
            ) : (
              <Badge variant="secondary">Inaktiv</Badge>
            )}</span>
          </div>
      </div>
      <div class="flex flex-1 items-center gap-2 p-6">
        <div class="flex flex-col w-full">
          <div class="grid grid-cols-1 lg:grid-cols-6 gap-6 w-full">
            <div class="col-span-1">
              <p class="font-medium">Anzeigename</p>
              <Separator className="my-2" />
              <p>{user.displayName}</p>
            </div>
            <div class="col-span-1">
              <p class="font-medium">Vorname</p>
              <Separator className="my-2" />
              <p>{user.name}</p>
            </div>
            <div class="col-span-1">
              <p class="font-medium">Nachname</p>
              <Separator className="my-2" />
              <p>{user.surname}</p>
            </div>
            <div class="col-span-1">
              <p class="font-medium">E-Mail</p>
              <Separator className="my-2" />
              <p>{user.email}</p>
            </div>
          </div>
          <div class="flex justify-end gap-x-4 [&:not(:first-child)]:mt-6">
            <Button ><Pencil /><a href={`/users/edit/${id}`}> Benutzer bearbeiten</a></Button>
            <AlertDialogDelete
              id={user.id}
              resourceType="users"
              client:load
              triggerText="Benutzer löschen"
              title="Bist du sicher, dass du diesen Benutzer löschen möchtest?"
              description="Dies wird den Benutzer dauerhaft aus der Datenbank löschen."
              cancelText="Nein, abbrechen"
              actionText="Ja, löschen"
            />
          </div>
        </div>
      </div>
    </div>
  </DashboardWrapper>
</Layout>



