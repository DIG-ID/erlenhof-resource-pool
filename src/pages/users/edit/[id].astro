---

import { getUserData, getRolesData, getPoolsData, getEducationData } from "@/hooks/get-data";

import Layout from "@/layouts/Layout.astro"
import DashboardWrapper from "@/components/DashboardWrapper.astro";
import { ComponentWrapper } from "@/components/ui/component-wrapper";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { SelectRoles } from '@/components/select-roles';
import { SelectPools } from '@/components/select-pools';
import { SelectEducation } from '@/components/select-education';
import { CheckboxReact } from "@/components/checkbox";
import { RefreshCw } from "lucide-react";
import { AlertDialogDelete } from "@/components/alert-dialog-delete";

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/404");
}

// Get user Data
const user = await getUserData(id);
const roles = await getRolesData();
const pools = await getPoolsData();
const education = await getEducationData();

if (!user) {
  return Astro.redirect("/404");
}

---

<Layout title=`Edit ${user.name}`>
  <DashboardWrapper>
    <ComponentWrapper name={user.displayName} id={id}>
  
      <form method="post" action={`/api/users/${id}`} class="w-full">
  
        <div class="flex flex-col gap-y-8">
  
          <div class="grid  grid-cols-2 gap-4">
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="name">Name</Label>
              <Input type="text" id="name" name="name" defaultValue={user.name} />
            </div>
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="name">Surname</Label>
              <Input type="text" id="surname" name="surname" defaultValue={user.surname} />
            </div>
          </div>
    
          <div class="grid  grid-cols-2 gap-4">
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="name">Display Name</Label>
              <Input type="text" id="displayName" name="displayName" defaultValue={user.displayName} />
            </div>
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="email">Email</Label>
              <Input type="email" id="email" name="email" defaultValue={user.email} />
            </div>
          </div>
  
          <div class="grid grid-cols-2 gap-x-4">
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="phone">Phone</Label>
              <Input type="text" id="phone" name="phone" defaultValue={user.phoneNumber || ""} />
            </div>

            <div class="flex flex-col gap-y-4">
              <Label htmlFor="roles" className="font-medium">Role</Label>
              <SelectRoles
                roles={roles || []}
                name="role"
                value={JSON.stringify({ id: user.role.id, name: user.role.name }) || ""}
                client:load
              />
            </div>
          </div>

          <div class="grid grid-cols-2 gap-x-4">
            <div class="flex flex-col gap-y-4">
              <Label htmlFor="pools" className="font-medium">Pool</Label>
              <SelectPools
                pools={pools || []}
                name="pools"
                value={user.pool ? JSON.stringify(user.pool) : ""}
                client:load
              />
            </div>

            <div class="flex flex-col gap-y-4">
              <Label htmlFor="education" className="font-medium">Education</Label>
              <SelectEducation
                education={education || []}
                name="education"
                value={user.education ? JSON.stringify(user.education) : ""}
                client:load
              />
            </div>
          </div>

          <div class="grid grid-cols-2 gap-x-4">
            <div class="flex items-center gap-x-4">
              <Label htmlFor="isActive" className="font-medium">Activate Account</Label>
              <CheckboxReact isActive={user.isActive} name="isActive" client:load />
            </div>
          </div>
  
          <div class="flex gap-x-4 justify-end">
            <Button type="submit"><RefreshCw /> Update User</Button>
            <AlertDialogDelete
              id={id}
              resourceType="users"
              client:load
              triggerText="Delete User"
              title="Are you sure you want to delete this User?"
              description="This will permanently delete the user from the database."
              cancelText="No, cancel"
              actionText="Yes, delete"
            />
          </div>

        </div>
  
      </form>
    </ComponentWrapper>
  </DashboardWrapper>
</Layout>